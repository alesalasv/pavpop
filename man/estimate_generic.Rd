% Generated by roxygen2 (4.1.0.9001): do not edit by hand
% Please edit documentation in R/estimate_generic.R
\name{estimate_generic}
\alias{estimate_generic}
\title{Estimate parameters and predict warps for curve data}
\usage{
estimate_generic(y, t, amp_cov_par, amp_cov_fct, warp_cov_par, warp_cov_fct,
  kts, tw, iter = c(5, 5), use_warp_gradient = FALSE,
  homeomorphisms = "no", like_optim_control = list())
}
\arguments{
\item{y}{list of \eqn{n} functional observations. Missing values are allowed.}

\item{t}{list of time points corresponding to y. Should be scaled to have outer endpoints at 0 and 1.}

\item{amp_cov_par}{amplitude covariance parameters.}

\item{amp_cov_fct}{amplitude covariance matrix function.}

\item{warp_cov_par}{warp covariance parameters.}

\item{warp_cov_fct}{warp covariance matrix function.}

\item{kts}{anchor points for the B-spline basis used to model \eqn{\theta}.}

\item{tw}{anchor points for the warping parameters.}

\item{iter}{two-dimensional numeric consisting of number of outer and inner iterations.}

\item{use_warp_gradient}{logical. Should warp prediction use gradient based optimization?}

\item{homeomorphisms}{should warps be constrained to be homeomorphisms? Options are: \code{'no'}, \code{'soft'} or \code{'hard'}. 'soft' will project the prediction onto the space of homeomorphisms after each prediction. 'hard' will do the optimiziation in the constrained space (not implemented yet!).}

\item{like_optim_control}{list of control options for likelihood optimization. Parameters are given as \code{c(amp_cov_par, warp_cov_par)} and options include lower, upper, method, ndev (see \code{\link[stats::optim]{optim}}).}
}
\description{
This function does likelihood estimation in the model \deqn{y_i(t)=\theta(v(t, w_i))+x_i(t)+\epsilon_i(t)} based on iterative local linearization of the model around predictions of the random warping parameters \eqn{w_i}.
}
\examples{
# Load female growth data from the Berkeley growth study
t_orig <- fda::growth$age
y <- fda::growth$hgtf

m <- nrow(y)
n <- ncol(y)

# Construct velocities from finite differences
y <- (y[c(2:m, m), ] - y) / (t_orig[c(2:m, m)] - t_orig)
y[is.na(y)] <- 0
theta <- rowMeans(y)

t_range <- c(0, 19)
t <- replicate(n, t_orig / t_range[2], simplify = FALSE)
y <- lapply(1:n, function (x) y[, x])

# Set up covariance functions
warp_cov_par <- c(tau = 1)
warp_cov_fct <- function(t, param) Brownian_cov(t, param, type = 'bridge')

amp_cov_par <- c(scale = 1, range = 1)
amp_cov_fct <- function(t, param) Matern_cov(t, c(param, 2), noise = TRUE)

# Set up parametrization
tw <- seq(0, 1, length = 7)[2:6]
kts <- seq(0, 1, length = 12)[2:11]

# Estimate in the model
res <- estimate_generic(y, t, amp_cov_par, amp_cov_fct, warp_cov_par, warp_cov_fct, kts, tw, homeomorphism = 'soft', like_optim_control = list(lower = rep(1e-3, 3), upper = c(10, 2, 2)))

# Display data
par(mfrow = c(1, 2))

plot(t_orig, theta, ylim = range(sapply(y, range)), type = 'l', lwd = 2, lty = 2, main = 'Original growth velocities', xlab = 'Age', ylab = 'Growth velocity')
for (i in 1:n) lines(t_orig, y[[i]], lwd = 0.2)

basis <- bs(x = t[[1]], knots = kts, Boundary.knots = c(0, 1))
plot(t_orig, basis \%*\% res$c, ylim = range(sapply(y, range)), type = 'l', lwd = 2, lty = 2, main = 'Warped growth velocities', xlab = 'Biological age', ylab = 'Growth velocity')
for (i in 1:n) lines(t_range[2] * v(res$w[,i], t[[i]], tw), y[[i]], lwd = 0.2)

# Predicted warping functions
par(mfrow = c(1, 1))
plot(t_orig, t_orig, type = 'l', lwd = 2, lty = 2, main = 'Warping functions', xlab = 'Age', ylab = 'Biological age')
for (i in 1:n) lines(t_orig, t_range[2] * v(res$w[,i], t[[i]], tw), lwd = 0.2)
}
\keyword{estimation}
\keyword{likelihood}

