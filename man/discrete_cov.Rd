% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/covariance_functions.R
\name{discrete_cov}
\alias{const_cov}
\alias{diag_cov}
\alias{discrete_cov}
\alias{id_cov}
\alias{unstr_cov}
\alias{zero_cov}
\title{Discrete covariance-matrix functions}
\usage{
zero_cov(t, param = NULL)

id_cov(t, param = c(scale = 1))

const_cov(t, param = c(scale = 1))

diag_cov(t, param)

unstr_cov(t, param)
}
\arguments{
\item{t}{evaluation points.}

\item{param}{parameters for the covariance matrix.}
}
\value{
Covariance matrix of dimension \eqn{m x m} where \eqn{m} is the length
of \code{t}.
}
\description{
Discrete covariance-matrix functions return a covariance matrix that does not depend
on evaluation points \code{t}. Possibilities are \code{zero_cov}, \code{id_cov},
\code{diag_cov} and \code{unstr_cov}. See details for further information.
}
\details{
The discrete covariance-matrix functions return \eqn{m x m} covariance matrices
where \eqn{m} is the length of \code{t}. They are discrete in the sense that they
do not depend on the specific evaluation points \code{t}. These covariance matrix
functions are mainly used to model latent variables.

\code{zero_cov} returns an \eqn{m x m} zero matrix.

\code{id_cov} returns an \eqn{m x m} identity matrix.

\code{const_cov} returns an \eqn{m x m} matrix consisting of all ones.
\strong{Note:} this covariance matrix has rank 1 and is thus generally
not positive definite.

\code{diag_cov} returns an \eqn{m x m} diagonal matrix with \code{param} on the diagonal.

\code{unstr_cov} returns an unstructured \eqn{m x m} covariance matrix with the diagonal
given by the first \eqn{m} elements in \code{param}, and the remaining filling
the upper and lower triangles. If the supplied parameters does not specify a positive
definite matrix, the function tries to return the nearest positive definite matrix (see
\code{\link[Matrix]{nearPD}}). This may cause \code{unstr_cov} to be slow if \eqn{m} is
not small.
}
\examples{
# Evaluation points
t <- 0:1
# Generate zero, identity and constant covariance matrices
zero_cov(t)
id_cov(t)
const_cov(t)

# Generate diagonal covariance
diag_cov(t, param = 1:2)

# Generate unstructured covariance matrix
unstr_cov(t, param = c(1, 1, 0.5))

# Generate unstructured covariance matrix with parameters
# that will not produce a positive matrix
(C <- unstr_cov(t, param = c(1, 1, 1.1)))
det(C)

}
\seealso{
\code{\link{make_cov_fct}}
}
\keyword{covariance}

